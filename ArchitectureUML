@startuml
top to bottom direction
skinparam linetype ortho

 
class Player{
+ Username: String
+ UserID: UUID
+ Rank: Rank
+ Level: Integer

+ joinGame(Game)
+ leaveGame(Game)
}

abstract class DataAccessObject{
+ GetGameData(RequestType, RequestData)
+ GetPlayerData(RequestType, RequestData)
+ CreatePlayer(Username)
}

class IOController {
- DataAccessObject: DataAccessObject

+ CreateSession(RequestData)
+ InteractWithGame(RequestType, RequestData)
+ CreateUser(Username)
+ RemoveUser(UUID)

}

class Session{
+ SessionID: UUID
- ApiInfo: Object
- DataAccessObject: DataAccessObject
+ Creator: Player
+ CreationTimeStamp: DateTime
+ Game: Game
+ Users: ArrayList<Player>

+ AddPlayer(Player)
+ RemovePlayer(Player)
+ GetQuizData(RequestType, RequestData)
+ SetPlayerResponse(Player, RequestType, RequestData)
+ DisposeSession(this)

}
 
interface Game{
+ StartGame(Session)
+ EndGame(Session)
+ GetWinner(Session)
+ AddPlayer(UUID)
+ RemovePlayer(UUID)
}


class MultiPlayerGame implements Game{
+ Players: ArrayList<Players>
+ Session: Session
+ DataAccessObject: DataAccessObject

+ ValidatePlayerSession(Session)
+ GetQuizData(Players)
}
MultiPlayerGame o-- Player

IOController -- Session
IOController ..> DataAccessObject

Session <..> MultiPlayerGame
Session ..> DataAccessObject

@enduml
